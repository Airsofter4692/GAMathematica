(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110018,       2120]
NotebookOptionsPosition[    107580,       2074]
NotebookOutlinePosition[    107984,       2090]
CellTagsIndexPosition[    107941,       2087]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Example Environment - Factors of an integer", "Title",
 CellChangeTimes->{{3.8651508730699277`*^9, 
  3.865150891116023*^9}},ExpressionUUID->"e7b91070-b45b-4313-bc04-\
dabb7f7c4268"],

Cell["I would recommend to evaluate the whole notebook", "Text",
 CellChangeTimes->{{3.8651513841573143`*^9, 3.8651513872204056`*^9}, {
  3.865151675690569*^9, 3.865151678400741*^9}, {3.8651522007214785`*^9, 
  3.8651522185138626`*^9}},ExpressionUUID->"ec56b3f9-ee5a-4bdb-b452-\
4efa50fdbf52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Import", " ", "Directly", " ", "from", " ", "GitHub"}], " ", "-",
     " ", 
    RowBox[{
    "Can", " ", "alternativly", " ", "download", " ", "and", " ", "import", 
     " ", "from", " ", 
     RowBox[{"mathematica", "'"}], "s", " ", "applcations", " ", "folder"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "Get", "[", 
    "\"\<https://raw.githubusercontent.com/harveyThomas4692/GAMathematica/\
main/Genetic.m\>\"", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.864801020289571*^9, 3.8648010351586723`*^9}, {
  3.865151861457327*^9, 3.865151915459332*^9}, {3.8651519563250585`*^9, 
  3.865151976123627*^9}, {3.865152101378081*^9, 3.865152128404151*^9}, {
  3.865152239744712*^9, 3.8651522420958633`*^9}, {3.8651524815452037`*^9, 
  3.865152486392804*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"debce96c-3cf4-4d6e-bbdd-cdf19f832b38"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Genetic: Genetic Evolution of Bit Sequences\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Times",
  FontSize->16,
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{
  3.8651519607962027`*^9, {3.8651524870813146`*^9, 3.8651524971558743`*^9}, 
   3.8651525597293916`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"17f1fc24-d69f-4714-ba16-22108fe0feed"],

Cell[BoxData[
 StyleBox["\<\"S. A. Abel, A. Constantin, T. R. Harvey and A. Lukas \"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Times",
  FontSize->14,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.8651519607962027`*^9, {3.8651524870813146`*^9, 3.8651524971558743`*^9}, 
   3.8651525597343907`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"284bd8ae-7640-48ff-b86e-8b7b5d4029f1"],

Cell[BoxData[
 StyleBox["\<\"Last Update: 9 June 2022\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Times",
  FontSize->14,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.8651519607962027`*^9, {3.8651524870813146`*^9, 3.8651524971558743`*^9}, 
   3.865152559739391*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b4aa849a-cf04-4edd-bbec-dcab528e1a2f"],

Cell[BoxData[
 StyleBox["\<\"Execute \
\\!\\(\\*\\r\\nStyleBox[\\\"?\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\r\
\\nStyleBox[\\\"Genetic\\\",\\nFontWeight->\\\"Bold\\\"]\\) for help. Current \
Genetic options:\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Times",
  FontSize->14,
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.8651519607962027`*^9, {3.8651524870813146`*^9, 3.8651524971558743`*^9}, 
   3.8651525597416444`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"6668b108-c7da-4023-8b3e-495329e57902"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"InitModule\"\>", "\[Rule]", "MonadEnv`MonadBitInit"}], ",", 
    RowBox[{"\<\"FitnessModule\"\>", "\[Rule]", "MonadEnv`MonadFitness"}], 
    ",", 
    RowBox[{"\<\"GenSize\"\>", "\[Rule]", "50"}], ",", 
    RowBox[{"\<\"MutationRate\"\>", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"\<\"KeepFitest\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"NumCuts\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"SelectionMethod\"\>", "\[Rule]", "\<\"Roulette\"\>"}], ",", 
    RowBox[{"\<\"Alpha\"\>", "\[Rule]", "3"}]}], "}"}], "Output",
  StripOnInput->False]], "Print",
 CellChangeTimes->{
  3.8651519607962027`*^9, {3.8651524870813146`*^9, 3.8651524971558743`*^9}, 
   3.8651525597436447`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"3a4dec0a-d70b-458a-80de-3c1d55a20599"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note, as it says above, run the command \[OpenCurlyDoubleQuote]?Genetic\
\[CloseCurlyDoubleQuote] to get information on functions and options\
\>", "Text",
 CellChangeTimes->{{3.8651512866044044`*^9, 
  3.865151321773612*^9}},ExpressionUUID->"97cfa681-84b2-462d-ab46-\
66d371c85d77"],

Cell[BoxData[
 RowBox[{"?", "Genetic"}]], "Input",
 CellChangeTimes->{{3.8651513229961114`*^9, 3.8651513244899693`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"364a7857-15c4-4c4a-a7b6-92ec34c63a4e"],

Cell[BoxData[
 RowBox[{"?", "GeneticModules"}]], "Input",
 CellChangeTimes->{{3.8651513327895117`*^9, 3.8651513348979616`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f2bd6842-9f88-45d3-a563-907c44e6ac08"],

Cell[BoxData[
 RowBox[{"?", "GeneticOptions"}]], "Input",
 CellChangeTimes->{{3.865151336954037*^9, 3.865151341110448*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"db82105e-5bca-4027-a9dd-1f66bfe9ce5d"],

Cell[CellGroupData[{

Cell["\<\
Environment - Example Environment for Finding Factors of an Integer\
\>", "Section",
 CellChangeTimes->{{3.8651502542408876`*^9, 3.8651502568922043`*^9}, {
  3.86515090985081*^9, 3.8651509111915665`*^9}, {3.8651513950269113`*^9, 
  3.8651514115478253`*^9}},ExpressionUUID->"4e646240-0600-428e-92ef-\
205c5e0dca1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Example", " ", "Parameter", " ", "values"}], " ", "-", " ", 
    RowBox[{"Will", " ", "be", " ", "set", " ", "again", " ", "later"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numberOfBits", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"intToFactor", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "a", " ", "fitness", " ", "function"}], " ", "-", 
     " ", 
     RowBox[{
     "The", " ", "aim", " ", "is", " ", "the", " ", "maximise", " ", "the", 
      " ", "fitness"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "FitnessFunction", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"\"\<OutFormat\>\"", "->", "\"\<short\>\""}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FitnessFunction", "[", 
      RowBox[{"bitlst_", ",", "opt___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "state", ",", "fitness", ",", "n", ",", "m", ",", "terminal"}], "}"}],
        ",", "\n", 
       RowBox[{
        RowBox[{"n", "=", "intToFactor"}], ";", "\n", 
        RowBox[{"m", "=", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{"bitlst", ",", "2"}], "]"}], "+", "1"}]}], ";", "\n", 
        RowBox[{"fitness", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"n", ",", "m"}], "]"}], "/", "m"}], ")"}]}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"fitness", "==", "0"}], ",", 
          RowBox[{"terminal", "=", "True"}], ",", 
          RowBox[{"terminal", "=", "False"}]}], "]"}], ";", "\n", 
        RowBox[{"state", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Integers\>\"", "->", 
             RowBox[{"{", 
              RowBox[{"n", ",", "m"}], "}"}]}], ",", 
            RowBox[{"\"\<Bits\>\"", "->", "bitlst"}], ",", 
            RowBox[{"\"\<Fitness\>\"", "->", "fitness"}], ",", 
            RowBox[{"\"\<Terminal\>\"", "->", "terminal"}]}], "}"}], "]"}]}], 
        ";", "\n", "state"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "an", " ", "initialisation", " ", "function"}], 
     " ", "-", " ", 
     RowBox[{
     "This", " ", "will", " ", "be", " ", "used", " ", "to", " ", "generate", 
      " ", "the", " ", "population", " ", "in", " ", "generation", " ", 
      "0"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegerInit", "[", "opt___", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"numbits", ",", "bitlst"}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"numbits", "=", "numberOfBits"}], ";", "\n", 
        RowBox[{"bitlst", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"{", "numbits", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"FitnessFunction", "[", 
         RowBox[{"bitlst", ",", "numbits"}], "]"}]}]}], "\n", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.865150268270466*^9, 3.8651503157174444`*^9}, {
   3.8651504684006386`*^9, 3.8651504878936768`*^9}, 3.865150549199402*^9, {
   3.865150652810053*^9, 3.8651507664121*^9}, 
   3.8651508119350204`*^9},ExpressionUUID->"2142e4b0-d186-4b89-b17a-\
4727513e833a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Set", " ", "the", " ", "options", " ", "for", " ", "the", " ", "genetic",
      " ", "package"}], ",", " ", 
    RowBox[{
    "so", " ", "that", " ", "they", " ", "use", " ", "these", " ", "example", 
     " ", "functions"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Genetic", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<InitModule\>\"", "\[Rule]", "IntegerInit"}], ",", 
       RowBox[{"\"\<FitnessModule\>\"", "\[Rule]", "FitnessFunction"}], ",", 
       RowBox[{"\"\<GenSize\>\"", "\[Rule]", "100"}], ",", 
       RowBox[{"\"\<SelectionMethod\>\"", "\[Rule]", "\"\<Ranking\>\""}], ",", 
       RowBox[{"\"\<MutationRate\>\"", "\[Rule]", "0.004"}], ",", 
       RowBox[{"\"\<Alpha\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<KeepFitest\>\"", "\[Rule]", "True"}]}], "}"}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.865150571150035*^9, {3.865150849933948*^9, 3.86515085302322*^9}, {
   3.865151696362815*^9, 
   3.865151715771058*^9}},ExpressionUUID->"25880620-da71-4cca-b206-\
07a369929566"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Run - Run This Last", "Section",
 CellChangeTimes->{{3.865140953443369*^9, 3.865140958276228*^9}, {
  3.8651503710551634`*^9, 3.865150376177534*^9}, {3.8651522256795993`*^9, 
  3.865152229252836*^9}},ExpressionUUID->"db6e485d-a1f8-4f88-8bcb-\
0365b9e1f3a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Set", " ", "Paramters", " ", "for", " ", "Environment"}], " ", 
    "-", " ", 
    RowBox[{
    "GA", " ", "will", " ", "return", " ", "factors", " ", "of", " ", 
     "intToFactor"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intToFactor", "=", "97008"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfBits", "=", 
     RowBox[{"Floor", "[", 
      RowBox[{"N", "[", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", "intToFactor"}], "]"}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8651408006814737`*^9, 3.865140810338215*^9}, {
  3.865141245052402*^9, 3.865141247320115*^9}, {3.865150495981855*^9, 
  3.865150533510394*^9}, {3.865150899939357*^9, 
  3.8651509496779327`*^9}},ExpressionUUID->"a0e0d03e-1303-402f-b743-\
9b6563b0925b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Run", " ", "GA", " ", "with", " ", "random", " ", "initial"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pop", "=", 
    RowBox[{"EvolvePopulation", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "100"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.865151242865911*^9, 3.865151279439165*^9}, {
  3.86515274520901*^9, 
  3.8651527457887125`*^9}},ExpressionUUID->"9759f4dc-8a1c-4ae9-9d4c-\
3f3e64711052"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Return", " ", "the", " ", "examples", " ", "from", " ", "the", " ", 
     "population", " ", "with", " ", "fitness", " ", "zero"}], " ", "-", " ", 
    
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "those"}], " ", "that", " ", "are", " ",
      "factors", " ", "of", " ", "intToFactor"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", "pop", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<Fitness\>\"", "/.", "#"}], ")"}], "\[Equal]", "0"}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8651527511915026`*^9, 
  3.865152777047206*^9}},ExpressionUUID->"a61a678e-786b-4929-81ae-\
b00a5384e54e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Print", " ", "some", " ", "plots", " ", "from", " ", "the", " ", "GA"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PlotFitness", "[", 
     RowBox[{"pop", ",", 
      RowBox[{"\"\<Method\>\"", "->", "\"\<Histogram\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotFitness", "[", 
     RowBox[{"pop", ",", 
      RowBox[{"\"\<Method\>\"", "->", "\"\<Points\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotFitness", "[", 
     RowBox[{"pop", ",", 
      RowBox[{"\"\<Method\>\"", "->", "\"\<Contours\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotTerminal", "[", "pop", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.865150621810027*^9, 3.8651506356622477`*^9}, {
  3.865150779674711*^9, 3.865150792559233*^9}, {3.8651512467555494`*^9, 
  3.8651512513944407`*^9}, {3.865152729308304*^9, 
  3.865152739526772*^9}},ExpressionUUID->"340d63ed-6f76-43b0-8325-\
44b6c44241d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          {RGBColor[
           0.41237025941422595`, 0.11201132217573222`, 0.577626309623431], 
           CuboidBox[{0., -1., 0.}, {5., -0.95, 12.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{0., -0.95, 0.}, {5., -0.9, 9.}]}, 
          {RGBColor[
           0.40163539748953975`, 0.11260138075313808`, 0.5868281841004184], 
           CuboidBox[{0., -0.9, 0.}, {5., -0.85, 14.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{0., -0.85, 0.}, {5., -0.8, 6.}]}, 
          {RGBColor[
           0.40700282845188285`, 0.11230635146443516`, 0.5822272468619247], 
           CuboidBox[{0., -0.8, 0.}, {5., -0.75, 13.}]}, 
          {RGBColor[
           0.41237025941422595`, 0.11201132217573222`, 0.577626309623431], 
           CuboidBox[{0., -0.75, 0.}, {5., -0.7, 12.}]}, 
          {RGBColor[
           0.41773769037656905`, 0.11171629288702929`, 0.5730253723849372], 
           CuboidBox[{0., -0.7, 0.}, {5., -0.65, 11.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{0., -0.65, 0.}, {5., -0.6, 9.}]}, 
          {RGBColor[
           0.3479610878661088, 0.11555167364016737`, 0.6328375564853557], 
           CuboidBox[{0., -0.6, 0.}, {5., -0.55, 24.}]}, 
          {RGBColor[
           0.2986906778242678, 0.13968248535564853`, 0.6859312050209204], 
           CuboidBox[{0., -0.55, 0.}, {5., -0.5, 37.}]}, 
          {RGBColor[
           0.40163539748953975`, 0.11260138075313808`, 0.5868281841004184], 
           CuboidBox[{0., -0.5, 0.}, {5., -0.45, 14.}]}, 
          {RGBColor[
           0.40700282845188285`, 0.11230635146443516`, 0.5822272468619247], 
           CuboidBox[{0., -0.45, 0.}, {5., -0.4, 13.}]}, 
          {RGBColor[
           0.3425936569037657, 0.1158467029288703, 0.6374384937238493], 
           CuboidBox[{0., -0.4, 0.}, {5., -0.35, 25.}]}, 
          {RGBColor[
           0.38553310460251045`, 0.11348646861924687`, 0.6006309958158996], 
           CuboidBox[{0., -0.35, 0.}, {5., -0.3, 17.}]}, 
          {RGBColor[
           0.2986906778242678, 0.13968248535564853`, 0.6859312050209204], 
           CuboidBox[{0., -0.3, 0.}, {5., -0.25, 37.}]}, 
          {RGBColor[
           0.39626796652719665`, 0.112896410041841, 0.5914291213389121], 
           CuboidBox[{0., -0.25, 0.}, {5., -0.2, 15.}]}, 
          {RGBColor[
           0.30071015899581593`, 0.1360739163179916, 0.682427171548117], 
           CuboidBox[{0., -0.2, 0.}, {5., -0.15, 36.}]}, 
          {RGBColor[
           0.3372262259414226, 0.11614173221757322`, 0.6420394309623431], 
           CuboidBox[{0., -0.15, 0.}, {5., -0.1, 26.}]}, 
          {RGBColor[
           0.2986906778242678, 0.13968248535564853`, 0.6859312050209204], 
           CuboidBox[{0., -0.1, 0.}, {5., -0.05, 37.}]}, 
          {RGBColor[
           0.3067686025104603, 0.12524820920502092`, 0.671915071129707], 
           CuboidBox[{0., -0.05, 0.}, {5., 0., 33.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{5., -1., 0.}, {10., -0.95, 7.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{5., -0.95, 0.}, {10., -0.9, 2.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{5., -0.9, 0.}, {10., -0.85, 8.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{5., -0.85, 0.}, {10., -0.8, 4.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{5., -0.8, 0.}, {10., -0.75, 8.}]}, 
          {RGBColor[
           0.40700282845188285`, 0.11230635146443516`, 0.5822272468619247], 
           CuboidBox[{5., -0.75, 0.}, {10., -0.7, 13.}]}, 
          {RGBColor[
           0.41237025941422595`, 0.11201132217573222`, 0.577626309623431], 
           CuboidBox[{5., -0.7, 0.}, {10., -0.65, 12.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{5., -0.65, 0.}, {10., -0.6, 5.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{5., -0.6, 0.}, {10., -0.55, 9.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{5., -0.55, 0.}, {10., -0.5, 8.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{5., -0.5, 0.}, {10., -0.45, 6.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{5., -0.45, 0.}, {10., -0.4, 4.}]}, 
          {RGBColor[
           0.3533285188284519, 0.11525664435146443`, 0.6282366192468619], 
           CuboidBox[{5., -0.4, 0.}, {10., -0.35, 23.}]}, 
          {RGBColor[
           0.40163539748953975`, 0.11260138075313808`, 0.5868281841004184], 
           CuboidBox[{5., -0.35, 0.}, {10., -0.3, 14.}]}, 
          {RGBColor[
           0.3533285188284519, 0.11525664435146443`, 0.6282366192468619], 
           CuboidBox[{5., -0.3, 0.}, {10., -0.25, 23.}]}, 
          {RGBColor[
           0.42310512133891215`, 0.11142126359832637`, 0.5684244351464436], 
           CuboidBox[{5., -0.25, 0.}, {10., -0.2, 10.}]}, 
          {RGBColor[
           0.2805153472803347, 0.17215960669456065`, 0.7174675062761505], 
           CuboidBox[{5., -0.2, 0.}, {10., -0.15, 46.}]}, 
          {RGBColor[
           0.268398460251046, 0.19381102092050206`, 0.7384917071129706], 
           CuboidBox[{5., -0.15, 0.}, {10., -0.1, 52.}]}, 
          {RGBColor[
           0.2650152887029289, 0.4803666610878661, 0.8032095857740587], 
           CuboidBox[{5., -0.1, 0.}, {10., -0.05, 119.}]}, 
          {RGBColor[
           0.27478076150627617`, 0.5081843849372385, 0.7888516945606695], 
           CuboidBox[{5., -0.05, 0.}, {10., 0., 127.}]}, 
          {RGBColor[
           0.42310512133891215`, 0.11142126359832637`, 0.5684244351464436], 
           CuboidBox[{10., -1., 0.}, {15., -0.95, 10.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{10., -0.9, 0.}, {15., -0.85, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{10., -0.85, 0.}, {15., -0.8, 2.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{10., -0.75, 0.}, {15., -0.7, 7.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{10., -0.6, 0.}, {15., -0.55, 1.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{10., -0.55, 0.}, {15., -0.5, 6.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{10., -0.5, 0.}, {15., -0.45, 1.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{10., -0.45, 0.}, {15., -0.4, 2.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{10., -0.4, 0.}, {15., -0.35, 3.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{10., -0.3, 0.}, {15., -0.25, 7.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{10., -0.25, 0.}, {15., -0.2, 6.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{10., -0.2, 0.}, {15., -0.15, 4.}]}, 
          {RGBColor[
           0.38553310460251045`, 0.11348646861924687`, 0.6006309958158996], 
           CuboidBox[{10., -0.15, 0.}, {15., -0.1, 17.}]}, 
          {RGBColor[
           0.2462218242677824, 0.31747249372384934`, 0.8009636485355649], 
           CuboidBox[{10., -0.1, 0.}, {15., -0.05, 81.}]}, 
          {RGBColor[
           0.8415823430962343, 0.6867936443514644, 0.2442800669456067], 
           CuboidBox[{10., -0.05, 0.}, {15., 0., 350.}]}, 
          {RGBColor[
           0.40163539748953975`, 0.11260138075313808`, 0.5868281841004184], 
           CuboidBox[{15., -1., 0.}, {20., -0.95, 14.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{15., -0.55, 0.}, {20., -0.5, 1.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{15., -0.5, 0.}, {20., -0.45, 6.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{15., -0.45, 0.}, {20., -0.4, 9.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{15., -0.25, 0.}, {20., -0.2, 4.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{15., -0.2, 0.}, {20., -0.15, 1.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{15., -0.15, 0.}, {20., -0.1, 1.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{15., -0.1, 0.}, {20., -0.05, 8.}]}, 
          {RGBColor[
           0.8733323556485355, 0.2559041924686194, 0.15395625104602514`], 
           CuboidBox[{15., -0.05, 0.}, {20., 0., 456.}]}, 
          {RGBColor[
           0.37479824267782424`, 0.11407652719665272`, 0.609832870292887], 
           CuboidBox[{20., -1., 0.}, {25., -0.95, 19.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{20., -0.55, 0.}, {25., -0.5, 1.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{20., -0.5, 0.}, {25., -0.45, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{20., -0.45, 0.}, {25., -0.4, 2.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{20., -0.2, 0.}, {25., -0.15, 5.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{20., -0.1, 0.}, {25., -0.05, 7.}]}, 
          {RGBColor[
           0.86847089958159, 0.21792213389121362`, 0.1473128702928871], 
           CuboidBox[{20., -0.05, 0.}, {25., 0., 463.}]}, 
          {RGBColor[
           0.2805153472803347, 0.17215960669456065`, 0.7174675062761505], 
           CuboidBox[{25., -1., 0.}, {30., -0.95, 46.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{25., -0.5, 0.}, {30., -0.45, 6.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{25., -0.45, 0.}, {30., -0.4, 2.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{25., -0.1, 0.}, {30., -0.05, 4.}]}, 
          {RGBColor[
           0.8972618535564854, 0.41764256066945615`, 0.18488938912133893`], 
           CuboidBox[{25., -0.05, 0.}, {30., 0., 426.}]}, 
          {RGBColor[
           0.39090053556485355`, 0.11319143933054393`, 0.5960300585774059], 
           CuboidBox[{25., 0., 0.}, {30., 0.05, 16.}]}, 
          {RGBColor[
           0.32112393305439335`, 0.11702682008368201`, 0.6558422426778242], 
           CuboidBox[{30., -1., 0.}, {35., -0.95, 29.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{30., -0.55, 0.}, {35., -0.5, 1.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{30., -0.5, 0.}, {35., -0.45, 2.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{30., -0.45, 0.}, {35., -0.4, 1.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{30., -0.2, 0.}, {35., -0.15, 5.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{30., -0.1, 0.}, {35., -0.05, 4.}]}, 
          {RGBColor[
           0.8323488033472802, 0.6935400209205022, 0.24752893723849373`], 
           CuboidBox[{30., -0.05, 0.}, {35., 0., 346.}]}, 
          {RGBColor[
           0.2598506359832636, 0.4509790794979079, 0.8063856527196653], 
           CuboidBox[{30., 0., 0.}, {35., 0.05, 112.}]}, 
          {RGBColor[
           0.3801656736401674, 0.1137814979079498, 0.6052319330543933], 
           CuboidBox[{35., -1., 0.}, {40., -0.95, 18.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{35., -0.5, 0.}, {40., -0.45, 2.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{35., -0.45, 0.}, {40., -0.4, 2.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{35., -0.2, 0.}, {40., -0.15, 9.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{35., -0.1, 0.}, {40., -0.05, 3.}]}, 
          {RGBColor[
           0.28144134728033476`, 0.5247385271966527, 0.7783306903765691], 
           CuboidBox[{35., -0.05, 0.}, {40., 0., 132.}]}, 
          {RGBColor[
           0.8046481841004184, 0.713779150627615, 0.2572755481171548], 
           CuboidBox[{35., 0., 0.}, {40., 0.05, 334.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{40., -1., 0.}, {45., -0.95, 6.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{40., -0.5, 0.}, {45., -0.45, 3.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{40., -0.45, 0.}, {45., -0.4, 1.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{40., -0.2, 0.}, {45., -0.15, 7.}]}, 
          {RGBColor[
           0.2946517154811716, 0.14689962343096233`, 0.6929392719665272], 
           CuboidBox[{40., -0.05, 0.}, {45., 0., 39.}]}, 
          {RGBColor[
           0.882352129707113, 0.3207853891213392, 0.16589042677824273`], 
           CuboidBox[{40., 0., 0.}, {45., 0.05, 444.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{45., -1., 0.}, {50., -0.95, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{45., -0.5, 0.}, {50., -0.45, 2.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{45., -0.45, 0.}, {50., -0.4, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{45., -0.3, 0.}, {50., -0.25, 2.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{45., -0.2, 0.}, {50., -0.15, 3.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{45., -0.1, 0.}, {50., -0.05, 3.}]}, 
          {RGBColor[
           0.3533285188284519, 0.11525664435146443`, 0.6282366192468619], 
           CuboidBox[{45., -0.05, 0.}, {50., 0., 23.}]}, 
          {RGBColor[
           0.8698598870292887, 0.2287741506276152, 0.14921097907949793`], 
           CuboidBox[{45., 0., 0.}, {50., 0.05, 461.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{50., -1., 0.}, {55., -0.95, 9.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{50., -0.5, 0.}, {55., -0.45, 4.}]}, 
          {RGBColor[
           0.42847255230125525`, 0.11112623430962343`, 0.5638234979079498], 
           CuboidBox[{50., -0.45, 0.}, {55., -0.4, 9.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{50., -0.2, 0.}, {55., -0.15, 1.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{50., -0.1, 0.}, {55., -0.05, 1.}]}, 
          {RGBColor[
           0.3533285188284519, 0.11525664435146443`, 0.6282366192468619], 
           CuboidBox[{50., -0.05, 0.}, {55., 0., 23.}]}, 
          {RGBColor[
           0.8754158368200837, 0.27218221757322203`, 0.15680341422594146`], 
           CuboidBox[{50., 0., 0.}, {55., 0.05, 453.}]}, 
          {RGBColor[
           0.41773769037656905`, 0.11171629288702929`, 0.5730253723849372], 
           CuboidBox[{55., -1., 0.}, {60., -0.95, 11.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{55., -0.5, 0.}, {60., -0.45, 3.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{55., -0.45, 0.}, {60., -0.4, 4.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{55., -0.2, 0.}, {60., -0.15, 5.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{55., -0.1, 0.}, {60., -0.05, 3.}]}, 
          {RGBColor[
           0.3640633807531381, 0.11466658577405858`, 0.6190347447698745], 
           CuboidBox[{55., -0.05, 0.}, {60., 0., 21.}]}, 
          {RGBColor[
           0.8754158368200837, 0.27218221757322203`, 0.15680341422594146`], 
           CuboidBox[{55., 0., 0.}, {60., 0.05, 453.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{60., -1., 0.}, {65., -0.95, 6.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{60., -0.5, 0.}, {65., -0.45, 1.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{60., -0.45, 0.}, {65., -0.4, 1.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{60., -0.2, 0.}, {65., -0.15, 4.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{60., -0.1, 0.}, {65., -0.05, 1.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{60., -0.05, 0.}, {65., 0., 8.}]}, 
          {RGBColor[0.857359, 0.131106, 0.132128], 
           CuboidBox[{60., 0., 0.}, {65., 0.05, 479.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{65., -1., 0.}, {70., -0.95, 5.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{65., -0.5, 0.}, {70., -0.45, 4.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{65., -0.45, 0.}, {70., -0.4, 3.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{65., -0.2, 0.}, {70., -0.15, 6.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{65., -0.1, 0.}, {70., -0.05, 4.}]}, 
          {RGBColor[
           0.37479824267782424`, 0.11407652719665272`, 0.609832870292887], 
           CuboidBox[{65., -0.05, 0.}, {70., 0., 19.}]}, 
          {RGBColor[
           0.8712488744769875, 0.23962616736401704`, 0.15110908786610885`], 
           CuboidBox[{65., 0., 0.}, {70., 0.05, 459.}]}, 
          {RGBColor[
           0.41773769037656905`, 0.11171629288702929`, 0.5730253723849372], 
           CuboidBox[{70., -1., 0.}, {75., -0.95, 11.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{70., -0.5, 0.}, {75., -0.45, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{70., -0.45, 0.}, {75., -0.4, 2.}]}, 
          {RGBColor[
           0.4445748451882845, 0.11024114644351464`, 0.5500206861924687], 
           CuboidBox[{70., -0.2, 0.}, {75., -0.15, 6.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{70., -0.1, 0.}, {75., -0.05, 1.}]}, 
          {RGBColor[
           0.32112393305439335`, 0.11702682008368201`, 0.6558422426778242], 
           CuboidBox[{70., -0.05, 0.}, {75., 0., 29.}]}, 
          {RGBColor[
           0.8790388577405858, 0.29926157322175756`, 0.16166843514644358`], 
           CuboidBox[{70., 0., 0.}, {75., 0.05, 448.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{75., -1., 0.}, {80., -0.95, 7.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{75., -0.5, 0.}, {80., -0.45, 2.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{75., -0.45, 0.}, {80., -0.4, 5.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{75., -0.2, 0.}, {80., -0.15, 3.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{75., -0.1, 0.}, {80., -0.05, 4.}]}, 
          {RGBColor[
           0.358695949790795, 0.11496161506276151`, 0.6236356820083682], 
           CuboidBox[{75., -0.05, 0.}, {80., 0., 22.}]}, 
          {RGBColor[
           0.8726378619246862, 0.2504781841004186, 0.1530071966527197], 
           CuboidBox[{75., 0., 0.}, {80., 0.05, 457.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{80., -1., 0.}, {85., -0.95, 4.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{80., -0.5, 0.}, {85., -0.45, 3.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{80., -0.45, 0.}, {85., -0.4, 2.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{80., -0.2, 0.}, {85., -0.15, 4.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{80., -0.1, 0.}, {85., -0.05, 4.}]}, 
          {RGBColor[
           0.3157565020920502, 0.11732184937238493`, 0.660443179916318], 
           CuboidBox[{80., -0.05, 0.}, {85., 0., 30.}]}, 
          {RGBColor[
           0.8754158368200837, 0.27218221757322203`, 0.15680341422594146`], 
           CuboidBox[{80., 0., 0.}, {85., 0.05, 453.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{85., -1., 0.}, {90., -0.95, 5.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{85., -0.5, 0.}, {90., -0.45, 3.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{85., -0.45, 0.}, {90., -0.4, 3.}]}, 
          {RGBColor[
           0.4499422761506276, 0.10994611715481171`, 0.5454197489539749], 
           CuboidBox[{85., -0.2, 0.}, {90., -0.15, 5.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{85., -0.1, 0.}, {90., -0.05, 7.}]}, 
          {RGBColor[
           0.358695949790795, 0.11496161506276151`, 0.6236356820083682], 
           CuboidBox[{85., -0.05, 0.}, {90., 0., 22.}]}, 
          {RGBColor[
           0.874026849372385, 0.2613302008368201, 0.15490530543933057`], 
           CuboidBox[{85., 0., 0.}, {90., 0.05, 455.}]}, 
          {RGBColor[
           0.43383998326359835`, 0.1108312050209205, 0.5592225606694561], 
           CuboidBox[{90., -1., 0.}, {95., -0.95, 8.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{90., -0.5, 0.}, {95., -0.45, 2.}]}, 
          {RGBColor[
           0.4660445690376569, 0.10906102928870293`, 0.5316169372384938], 
           CuboidBox[{90., -0.45, 0.}, {95., -0.4, 2.}]}, 
          {RGBColor[
           0.40163539748953975`, 0.11260138075313808`, 0.5868281841004184], 
           CuboidBox[{90., -0.2, 0.}, {95., -0.15, 14.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{90., -0.1, 0.}, {95., -0.05, 4.}]}, 
          {RGBColor[
           0.37479824267782424`, 0.11407652719665272`, 0.609832870292887], 
           CuboidBox[{90., -0.05, 0.}, {95., 0., 19.}]}, 
          {RGBColor[
           0.8768048242677824, 0.28303423430962354`, 0.15870152301255233`], 
           CuboidBox[{90., 0., 0.}, {95., 0.05, 451.}]}, 
          {RGBColor[
           0.43920741422594145`, 0.11053617573221758`, 0.5546216234309623], 
           CuboidBox[{95., -1., 0.}, {100., -0.95, 7.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{95., -0.5, 0.}, {100., -0.45, 1.}]}, 
          {RGBColor[
           0.4553097071129707, 0.10965108786610879`, 0.5408188117154812], 
           CuboidBox[{95., -0.45, 0.}, {100., -0.4, 4.}]}, 
          {RGBColor[
           0.41773769037656905`, 0.11171629288702929`, 0.5730253723849372], 
           CuboidBox[{95., -0.2, 0.}, {100., -0.15, 11.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{95., -0.1, 0.}, {100., -0.05, 1.}]}, 
          {RGBColor[
           0.3425936569037657, 0.1158467029288703, 0.6374384937238493], 
           CuboidBox[{95., -0.05, 0.}, {100., 0., 25.}]}, 
          {RGBColor[
           0.8768048242677824, 0.28303423430962354`, 0.15870152301255233`], 
           CuboidBox[{95., 0., 0.}, {100., 0.05, 451.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{100., -1., 0.}, {105., -0.95, 1.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{100., -0.5, 0.}, {105., -0.45, 1.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{100., -0.45, 0.}, {105., -0.4, 1.}]}, 
          {RGBColor[
           0.4606771380753138, 0.10935605857740587`, 0.5362178744769874], 
           CuboidBox[{100., -0.2, 0.}, {105., -0.15, 3.}]}, 
          {RGBColor[0.471412, 0.108766, 0.527016], 
           CuboidBox[{100., -0.1, 0.}, {105., -0.05, 1.}]}, 
          {RGBColor[
           0.3640633807531381, 0.11466658577405858`, 0.6190347447698745], 
           CuboidBox[{100., -0.05, 0.}, {105., 0., 21.}]}, 
          {RGBColor[
           0.3454129456066946, 0.6363776443514644, 0.6716429790794979], 
           CuboidBox[{100., 0., 0.}, {105., 0.05, 172.}]}},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->Medium,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0., 105.}, {-1., 0.05}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, 
      {RGBColor[0, 0, 1], PointSize[0.008], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJztnQlcTtn/+MMga6EIIU0lSVqotF6SLXvZ933f9y3Zyi4ijF0iy5BsZS0k
NHaRLC1apBTT2DX+/b7+c858Psczp+t5nm7xeM3rNa/362yf7XzOuefc+1R3
0PguQ4urqalNqaem9n////rvlfNm/5StpnG3zv/DxWdsEcrXSSfsOeahXUvT
eMIpNw+Y3hiRRrhaxeSsndGXCc+8qTG1ap+jhIf81iLl6NTrhPVTPTPn5x4k
fGxi+V/2VvMj/LLTpLn3tyUSXnuj6iv10EeEB/SecCOzDS2fcufC/q6hzwib
Ntvcan1QKuHBm8Mal3lC5b3+V8i7Y+svEr4kfLmzyDGWsPqcXfONurwkvGiO
bYh13RTCOZsiejQ6mkS4nFvP6HkaNwj3GnqzY4TDY8J/Twh/plE6k3DtDxs0
Oyyh448uVtI+JobqlzEixynSMINw1+N3g+eU8CFsXmpw3n8JhJ9ktHw4Z8hT
Wn7g2eUqc2n7gY0OvN1rnkz45mGN3rUGUvtrjppS9dSR54SXX/Lb7dMpiPDK
DhcfG4RRe6ov9ly9yZ/aw3etr6vDU2qPDX03fbpygMZD77G/tCo/m/Z/fPni
0OOVn1B5+3uEHTel/Y88eTjNf9Adwqn13q6deofq+27lFJ90W6qfz7Wyvlc9
aPmbtS3qxJ6n7bcu6nsk8yONj1+n/h3ofJi2r+yrvipOk8r39f+0v+O79Jfc
8Kbx4PyqRN5/2YSn3aj06q3ZPsLTs/SDH/an9rmzauymF6FUniY260qO2HWB
8KsD6hO1km8Snm1W6f74k9Q+g/Xq7am6gsZPuFVxh1/DqT6j1oZYbupM43f1
4HYLn3sFEO5WdfPhEfto/GuPWLp3xJzzhEv9en3ejXe0/c5KOS6HllN/xG6Z
/X//Ed6kWSF7vE0U4Wy9unF2TtcIr5i+ptSK69R+00a7RkXNp/bLDJhx45TX
JcKnPN7bNo6k3HDNu+m9974g3GFVjcaJuXT8DLdM/0G21J7Rbm3bt3Kn/hTq
W0+ccYGOn1o89nGLsnT854/XWYQeyiK88ctjxystaPtP26vMOmNC89WYqMED
3D5HUHnV/aMPPqP+39YtyjnKlvpjQ6vLDzo/jCM8dljXY8OS6Xy43bdu4MbS
MTRfFIsu7fIbzb8HRq+zf/UsmHDdP59XjQ+/TbjVJbONe/ZT/TplvTvlY0Hz
4R/ZoyZWSaX+qb+lgff91lcJ19FZ88nj0QPCl6NHlnm4mub7Nn531zW6Qeez
TaWgIwddKT8L1fcsfuIf+6kJMD+pCRlmhm6jlt0l3GBfzEK9MgmELxiuOT+3
3jXCBsZDTmb2zKD9NRhadcDzWMI13vs61hpG28/3bVjnVh3Kvn9a3dmwNZtw
VlXbivvC7xFe3+d8k47Fn9HyMy4vgm7dIvx1/QkgvClu8NyYjOeEB9yIHmFk
eJFwyNu0Zia/H6M8RGfch+MHCPe607PBlehEwjZaC9s3zQ4ifGVYcqcNgb8R
btE92CtxNdW3yY7IQYd20vYt6nSqNXs0tU/FnNO5rsF0vKo7FoxaXp7q08Bi
YO7NC7S/z8P6GGkcSyKsOf3kkIYDXlJ7W956edad8qiSR/7esYaO/8R07767
5x4QnmJ43VL9HrX/tt4+f1zpnEp4bYm1pe8vf0o4u1Gs87DScYR94p93Px9x
m/CH7kG2c/rfIWyc3q/sSHeq7/wvZjNmz6DlL8fvXXt5LB1vw946PikfaH/j
NLdcWzR2B+HhS4L8QtKpvP0mNkjRPkn7G7Vqq96MtlcJb+0/+8rQSGrPrI9e
Y3d0oeW141edWBwTTPhsevvxs+4+IizMK5Zb8q8NhDeXaa17z5qWLxw8p/ef
h6g/Dn5o9fIvRxq/Oya+Tl28lOrfx9Oz7zTX+4SfTUgY5mhK9fnkaxKU2/Eg
ta+Fx4Xg+BTCjzpuXLKwG+0fro958Q7yuZpw2W7A6XUfYghPrRw3sM1OOl50
8flj7u7+l/+Xrv40rn4y4adHLq2e2IWOr6FT6mUtexpPlQ9dXHczicZb4vKz
A6vUovK8c3vsufTRTcK71p/WvmmSSfjDC0eTwGdphKf1Da6Vup/mG7jfURPg
fkNNcM5Z9NKqI50f+69tSZ554Txh+9Y3IpwaUPvX8Bnzd7la1H6prW741tHd
T/iW0a32fd7OIxzTInji08vU32dLfUmcd5HGp1ZaZumYzodpvsw9OM99cQRh
uB6qCXD9yesvI7xYsfeXCWvbprdO/IvG04cBI8uX+RRJeN3bnNiIuUcJJ/iO
bdZWm+YzQ9Moly1jqP+XBrtcnjiQxv9RG79cKz0a79oznaNaVqf+63l+muWK
kTSf3xEcPyWspP23TwjWSSl1jrYH+w91ZD91QXNVy3YD9hwgfHdU5LVjwTGE
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
ctlLrYXSGa7nyh9PXob7Tfn7m/K8oq91TDbpD67n0usLv0+RXh6xDO8X2HJ5
7Q2fTwpeP6nHF8vwflN6eeS1Hy++lM14fBzPOF/B52sly+dV+BnuZ+XvDz7P
KF5euN+Q3n7w/kB6eXgM75uUPx7c70mv/8/GOD7h85D08imaefkH3s9ILy9m
uH65wnIJGMsDvyeQXj5lM9yvKb5/eD8jvb4/GrdrdnevXsduKvvKYLh/Lvj2
PxvD+w0lj+dV8Azf5xHfHq7P0uujbIb7FenlUbGKFcnw/J1fDp/vXdHzivT6
KJuxPeDvH4jvD57viGyv1lLpDN+fYMvh76kpX56ixvD5hF8/xN6tisu1PYXG
nmL9y4sXzHB/Kr2+yuaipi88j5denqLO8D6HXx++X6VgebxUXNgY7qeKXv9w
PyO9PQuaK/3v3+3v1h8+Xxc9+8L3r6SXR16G33dLL0+hYrVWXIb3Efz6UjO8
T5FenoJm+LwivTwqlpbhebj8/cHnH+XHI689/B6C3x9Y3wuBfwobw+cVthx+
34zKVaxwhvuXVui8ki2XWt6izvB9Kunl4TE8z+fXh++nSS+/1Ayfd+TvD74P
Jr1+hZrVWjMMz9fY8h+d4X5Henl4XNTkVbGKC5Lh/UvBjw/ff5TeHjwWlf+9
Cp7h+a308mCG+zvp5VE0w+dP6eURy3C/Lr08Kv65mTef4PtS0surUFZro+JC
zvD7fenlUTbD+yvljwf3h23QeTpbjtvD98vEjw/Pm6W3f1Hjn21+YObFp7z8
n/PRi8/wfF58+6LG8P0X8e3h84v49vA8V3p7iJW3oOWH75NJbw9FM3xeb4N+
H056+TDDv+8ovj3crys/XhXdf1FjufKVWlsuw/0Vv76Klctwvyq+PdyviG+v
igdxDN9/kl4eFf/YDN+PU/J4Xj8ew/cnpJcH7h+L/vi4P7gf5reH58XS+0fF
RYvh84308mCG71eKbw/fHyzk+ULNTW6G58Xy91fUGD4PSC+PWIbvp0gvT0Ez
PD93Q++zSS9fUWf4vCu9PJjh83TBj1+k481LxfIyPK+VXh7M8H0l6eUpaIb7
OenlKWiG93nSyyOW4fm8+PbweUB8e/h8Lb09xDJ8XlNwPKm1g+VFgOF+Wfnj
wf2J9Pormot6PBR2hu/TSy+P1FzU5hN8fir48eHvf0hvD4BeKlY0w/c7Cn58
+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
v350VrR/vze//j9Dz8RC
        "]]}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], Thickness[0.004], 
        LineBox[CompressedData["
1:eJw1lHswXGcYh5f8YTujrTZrbEdqZHMZRNIQJIT12w1iybKLvZVISKQTdWlL
JRPFmVaLSrJIyBKXddcoVqimGrGqpZTQi2o0mVYlmVxcQioaHfSS95yZM2ee
eb7fd77zvt93NkYnhsSYcjicw//e/z2/5f/k8dTRGplrfgeP9g92c/6/NiAn
M8nesH2A2BYREerWXWu9xAI8HZ/9K/XrHuLNOHZ026K2nOWtcDD352yZ+oLY
Dg/NPW/kft9K7IAMk/Q3F7QsOyLt7dImZVUj8Q40TjSc2sn7lHgnLv5yqd36
SDOxE64+GIn8UfMJsTNkbtL2y/UNxLswMvtS/e1gdj4XLLWmzYT3sONdcXod
c2OMW0/shqjZaruHawbi3XCq6P7K248dvwevWfLy4qUsu+PVrMbYJvsaYg8s
dA4bE4evEO+Fw5+vH05b/ZLYExNbjPOVBrZ+XjCpfFK4PeUasRBW1fcXUmPa
ib1xJ63kQZ2IZWAgUBVfKqJ6MIB9/vkFfdUl8iK0ppwLCDK2kBchx8ywe+rE
ZfJifHx9sHFjM41nxODpf/+tfqSa/D4oO8qzm5KLye+D1St3LV7sqCDvA36F
/F72QA55H7SVxcit7+eT9wW376PRb/hnyfvCZnlwQvzOOfJ+aK/7o+xnS5qP
8UPa2vtOvhsqye/HfGVEkrm+gPx+OEd6PPIqziDvD51FquN0wkny/hBYdp9n
eqPJSzD/JMIqXXeRvAQl63espPew9QmAKjK8SzpWRj4AB7WotjMrIh8I0eMz
W21cC8kHIv0hY2aw1ZM/gJ6kwFhuM/WbOQD5wPJy0clc8lIsmwevlxWXk5fC
8IJtX9btKvJBUItjxDPDJeSDEHCmdYp5mdbLCYbk0Oycy80s8sHghsKpIPHR
tWdehiibXOvPC7OfecigF15YN9mko/EyFJliqm0TzWeU4a6mLpE/z/ZHDmHv
u7z+Ueof5JD353U5drL9kqO9JWl8SFFLeTl+nf5hiNfLnp8Q9MeNRtuLaP0I
wfHV1M60vdQfJgRyd3dt1QzNZwxBkclKVHXNBcqHomcSq9eZTMqHQrD64VyH
7jTlQ/FWvFZUY1ZK+VDo35t1XnqerV8Y7uj8lQVzVB+E4eohYezaIvWPCYPJ
dw2nWu4lUD4MptvMuHJv6gdHgTlXydzkZ7R/oEDGOFdSmJxHeQVS4p4Ty65Q
fYwKrAoGFydM6DxwlHCv5bt4ttH+gBKPxSfC+bfY/apE3tLCzT0+H1BeCS/N
cN8xIbv/VZh2UXYbVPR/ggq91scDxoxs/1T4u9bNNllB9TWqkCBNWipuovdx
1LDQD2m8J9nvV0Mi2CRR5mgpr4bt8pEi+1u0XqMazMrmUkEZe7410HUJcybj
aL3QIL+W/wavmen+B0Wu+Gs=
         "]]}}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"fitness\"", TraditionalForm], None}, {
       FormBox["\"generation\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 101.}, {-0.2092099624114746, 0.00999917535974931}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], ",", 
   GraphicsBox[{{{}, {}}, {{}, {{}, {}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], Thickness[0.007], 
        LineBox[CompressedData["
1:eJw1lHswXGcYh5f8YTujrTZrbEdqZHMZRNIQJIT12w1iybKLvZVISKQTdWlL
JRPFmVaLSrJIyBKXddcoVqimGrGqpZTQi2o0mVYlmVxcQioaHfSS95yZM2ee
eb7fd77zvt93NkYnhsSYcjicw//e/z2/5f/k8dTRGplrfgeP9g92c/6/NiAn
M8nesH2A2BYREerWXWu9xAI8HZ/9K/XrHuLNOHZ026K2nOWtcDD352yZ+oLY
Dg/NPW/kft9K7IAMk/Q3F7QsOyLt7dImZVUj8Q40TjSc2sn7lHgnLv5yqd36
SDOxE64+GIn8UfMJsTNkbtL2y/UNxLswMvtS/e1gdj4XLLWmzYT3sONdcXod
c2OMW0/shqjZaruHawbi3XCq6P7K248dvwevWfLy4qUsu+PVrMbYJvsaYg8s
dA4bE4evEO+Fw5+vH05b/ZLYExNbjPOVBrZ+XjCpfFK4PeUasRBW1fcXUmPa
ib1xJ63kQZ2IZWAgUBVfKqJ6MIB9/vkFfdUl8iK0ppwLCDK2kBchx8ywe+rE
ZfJifHx9sHFjM41nxODpf/+tfqSa/D4oO8qzm5KLye+D1St3LV7sqCDvA36F
/F72QA55H7SVxcit7+eT9wW376PRb/hnyfvCZnlwQvzOOfJ+aK/7o+xnS5qP
8UPa2vtOvhsqye/HfGVEkrm+gPx+OEd6PPIqziDvD51FquN0wkny/hBYdp9n
eqPJSzD/JMIqXXeRvAQl63espPew9QmAKjK8SzpWRj4AB7WotjMrIh8I0eMz
W21cC8kHIv0hY2aw1ZM/gJ6kwFhuM/WbOQD5wPJy0clc8lIsmwevlxWXk5fC
8IJtX9btKvJBUItjxDPDJeSDEHCmdYp5mdbLCYbk0Oycy80s8sHghsKpIPHR
tWdehiibXOvPC7OfecigF15YN9mko/EyFJliqm0TzWeU4a6mLpE/z/ZHDmHv
u7z+Ueof5JD353U5drL9kqO9JWl8SFFLeTl+nf5hiNfLnp8Q9MeNRtuLaP0I
wfHV1M60vdQfJgRyd3dt1QzNZwxBkclKVHXNBcqHomcSq9eZTMqHQrD64VyH
7jTlQ/FWvFZUY1ZK+VDo35t1XnqerV8Y7uj8lQVzVB+E4eohYezaIvWPCYPJ
dw2nWu4lUD4MptvMuHJv6gdHgTlXydzkZ7R/oEDGOFdSmJxHeQVS4p4Ty65Q
fYwKrAoGFydM6DxwlHCv5bt4ttH+gBKPxSfC+bfY/apE3tLCzT0+H1BeCS/N
cN8xIbv/VZh2UXYbVPR/ggq91scDxoxs/1T4u9bNNllB9TWqkCBNWipuovdx
1LDQD2m8J9nvV0Mi2CRR5mgpr4bt8pEi+1u0XqMazMrmUkEZe7410HUJcybj
aL3QIL+W/wavmen+B0Wu+Gs=
         "]]}}, {{}, {}}}},
    AspectRatio->1,
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{{
       FormBox["\"fitness\"", TraditionalForm], None}, {
       FormBox["\"generation\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "GridLinesInFront" -> True},
    PlotRange->{{0, 101}, {-0.2092099624114746, 0.00999917535974931}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[1, 0, 0], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], Thickness[0.004], 
       LineBox[CompressedData["
1:eJxdk7lLA1EQxhcrSWWRwkLigUgUEe87ZnKbGDW7m0uwErQ1trHZQmsb/wOt
A4JgyiV2op0QsJHYeCQejb3Zl1lkvgch/PLNm2+Ol8G9Q2O/S9O0/fbH+e6c
n6AmD0nsBu4B9gL3AvcBDwAPAQ8DjwD7gceAx4EngCeBp4CngWeAZ4HngOeB
F4AXgZeAl+nYW0k0yie8lxXmc+ZVqvpOm3q1whyglu78csW8xvHXzEHy1C9K
Ac8NM1Gj7ATcddgijn9kPcT6E+sh2j2r/fp3n1kPU0AlfGE9zPlfWY/QZcmJ
eGM9Qusq4TvrUc7/wXqU/Vusx+hIGXyyHqOHe+e4elzGW3EZryVAT4C+Tkr2
frEOrCWln5Uk1V69yXoK7qegvg2of4P6nXX5XP803baneVZz9TTom5KtTfDf
Av8tOlDHrX+b9/HNOrCW4ffD8ZSBfBnpb2dgP7rsj3ToR6dR9WA43tbhviGZ
DJi3IfPbBuzHlEym7Mcy5bxsk1Q7p+78srJeysr5WVlZn52lGXXc+zk5HwK2
crI+OwfvLy/7pbycl5UH/zzsvyDjqQDzL4B/Ad5nEfZXhP9LUeazi+C/I+dJ
//wHRgKFTw==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"terminal fraction\"", TraditionalForm], None}, {
       FormBox["\"generation\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{Automatic, Automatic},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{396.00000000000006`, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 101.}, {0., 1.164}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.865140851806354*^9, {3.865140930793944*^9, 3.86514094376751*^9}, 
   3.865141258580153*^9, 3.8651501727550836`*^9, {3.8651506180523796`*^9, 
   3.865150636144092*^9}, {3.865150782073211*^9, 3.865150793455756*^9}, 
   3.8651512525186834`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"39246fa4-253a-4311-85d6-5611377e82c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2bcc0e9a-68af-4323-9db8-92528a6e84fb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 188, 3, 98, "Title",ExpressionUUID->"e7b91070-b45b-4313-bc04-dabb7f7c4268"],
Cell[771, 27, 293, 4, 35, "Text",ExpressionUUID->"ec56b3f9-ee5a-4bdb-b452-4efa50fdbf52"],
Cell[CellGroupData[{
Cell[1089, 35, 927, 21, 48, "Input",ExpressionUUID->"debce96c-3cf4-4d6e-bbdd-cdf19f832b38"],
Cell[CellGroupData[{
Cell[2041, 60, 476, 13, 27, "Print",ExpressionUUID->"17f1fc24-d69f-4714-ba16-22108fe0feed"],
Cell[2520, 75, 481, 13, 23, "Print",ExpressionUUID->"284bd8ae-7640-48ff-b86e-8b7b5d4029f1"],
Cell[3004, 90, 450, 13, 23, "Print",ExpressionUUID->"b4aa849a-cf04-4edd-bbec-dcab528e1a2f"],
Cell[3457, 105, 574, 15, 23, "Print",ExpressionUUID->"6668b108-c7da-4023-8b3e-495329e57902"],
Cell[4034, 122, 860, 19, 23, "Print",ExpressionUUID->"3a4dec0a-d70b-458a-80de-3c1d55a20599"]
}, Open  ]]
}, Open  ]],
Cell[4921, 145, 293, 6, 35, "Text",ExpressionUUID->"97cfa681-84b2-462d-ab46-66d371c85d77"],
Cell[5217, 153, 199, 3, 28, "Input",ExpressionUUID->"364a7857-15c4-4c4a-a7b6-92ec34c63a4e"],
Cell[5419, 158, 206, 3, 28, "Input",ExpressionUUID->"f2bd6842-9f88-45d3-a563-907c44e6ac08"],
Cell[5628, 163, 202, 3, 28, "Input",ExpressionUUID->"db82105e-5bca-4027-a9dd-1f66bfe9ce5d"],
Cell[CellGroupData[{
Cell[5855, 170, 324, 6, 67, "Section",ExpressionUUID->"4e646240-0600-428e-92ef-205c5e0dca1d"],
Cell[6182, 178, 3727, 96, 390, "Input",ExpressionUUID->"2142e4b0-d186-4b89-b17a-4727513e833a"],
Cell[9912, 276, 1147, 27, 67, "Input",ExpressionUUID->"25880620-da71-4cca-b206-07a369929566"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11096, 308, 271, 4, 67, "Section",ExpressionUUID->"db6e485d-a1f8-4f88-8bcb-0365b9e1f3a8"],
Cell[11370, 314, 874, 23, 67, "Input",ExpressionUUID->"a0e0d03e-1303-402f-b743-9b6563b0925b"],
Cell[12247, 339, 482, 13, 48, "Input",ExpressionUUID->"9759f4dc-8a1c-4ae9-9d4c-3f3e64711052"],
Cell[12732, 354, 805, 23, 48, "Input",ExpressionUUID->"a61a678e-786b-4929-81ae-b00a5384e54e"],
Cell[CellGroupData[{
Cell[13562, 381, 1022, 25, 105, "Input",ExpressionUUID->"340d63ed-6f76-43b0-8325-44b6c44241d6"],
Cell[14587, 408, 92953, 1661, 736, "Output",ExpressionUUID->"39246fa4-253a-4311-85d6-5611377e82c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

